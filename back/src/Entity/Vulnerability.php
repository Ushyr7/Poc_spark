<?php

namespace App\Entity;

use App\Repository\VulnerabilityRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\Mapping as ORM;
use Ramsey\Uuid\Uuid;
use Ramsey\Uuid\UuidInterface;

#[ORM\Entity(repositoryClass: VulnerabilityRepository::class)]
class Vulnerability
{
    #[ORM\Id]
    #[ORM\GeneratedValue(strategy: "CUSTOM")]
    #[ORM\Column(type: 'uuid')]
    #[ORM\CustomIdGenerator(class:"Ramsey\Uuid\Doctrine\UuidGenerator")]
    private UuidInterface $id;

    #[ORM\Column(length: 255)]
    private ?string $template;

    #[ORM\Column(length: 1500, nullable: true)]
    private ?string $description;

    #[ORM\Column(length: 255)]
    private ?string $name;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $reference;

    #[ORM\Column(length: 255)]
    private ?string $severity;

    #[ORM\Column]
    private ?String $matched_at;

    #[ORM\Column(type: Types::DATETIME_MUTABLE)]
    private ?\DateTimeInterface $timestamp;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $ip;


    #[ORM\ManyToOne(targetEntity: "App\Entity\Perimeter", inversedBy: "vulnerabilities")]
    #[ORM\JoinColumn(nullable: false)]
    private Perimeter $perimeter;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $solution_found;


    #[ORM\Column(length: 255, nullable: true)]
    private ?string $status;

    #[ORM\OneToMany(mappedBy: "vulnerability", targetEntity: "App\Entity\Tag")]
    #[ORM\JoinColumn(onDelete: "CASCADE")]
    private $tags;

     #[ORM\OneToMany(mappedBy: "vulnerability", targetEntity: "App\Entity\ExtractedResult")]
     #[ORM\JoinColumn(onDelete: "CASCADE")]
     private $extracted_results;

    public function __construct()
    {
        $this->tags = new ArrayCollection();
        $this->extracted_results = new ArrayCollection();
    }

    /**
     * @return Uuid
     */
    public function getId(): ?UuidInterface
    {
        return $this->id;
    }

    /**
     * @param Uuid $id
     */
    public function setId(UuidInterface $id): void
    {
        $this->id = $id;
    }

    /**
     * @return string|null
     */
    public function getTemplate(): ?string
    {
        return $this->template;
    }

    /**
     * @param string|null $template
     */
    public function setTemplate(?string $template): void
    {
        $this->template = $template;
    }

    /**
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * @param string|null $description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @param string|null $name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * @return string|null
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * @param string|null $reference
     */
    public function setReference(?string $reference): void
    {
        $this->reference = $reference;
    }

    /**
     * @return string|null
     */
    public function getSeverity(): ?string
    {
        return $this->severity;
    }

    /**
     * @param string|null $severity
     */
    public function setSeverity(?string $severity): void
    {
        $this->severity = $severity;
    }

    /**
     * @return \DateTimeImmutable|null
     */
    public function getMatchedAt(): String
    {
        return $this->matched_at;
    }

    /**
     * @param \DateTimeImmutable|null $matched_at
     */
    public function setMatchedAt(String $matched_at): void
    {
        $this->matched_at = $matched_at;
    }

    /**
     * @return \DateTimeInterface|null
     */
    public function getTimestamp(): ?\DateTimeInterface
    {
        return $this->timestamp;
    }

    /**
     * @param \DateTimeInterface|null $timestamp
     */
    public function setTimestamp(?\DateTimeInterface $timestamp): void
    {
        $this->timestamp = $timestamp;
    }

    /**
     * @return string|null
     */
    public function getIp(): ?string
    {
        return $this->ip;
    }

    /**
     * @param string|null $ip
     */
    public function setIp(?string $ip): void
    {
        $this->ip = $ip;
    }

    /**
     * @return bool|null
     */


    /**
     * @return Perimeter
     */
    public function getPerimeter(): Perimeter
    {
        return $this->perimeter;
    }

    /**
     * @param Perimeter $perimeter
     */
    public function setPerimeter(Perimeter $perimeter): void
    {
        $this->perimeter = $perimeter;
    }

    /**
     * @return string|null
     */
    public function getSolutionFound(): ?string
    {
        return $this->solution_found;
    }

    /**
     * @param string|null $solution_found
     */
    public function setSolutionFound(?string $solution_found): void
    {
        $this->solution_found = $solution_found;
    }

    /**
     * @return bool|null
     */

    /**
     * @return ArrayCollection
     */
    public function getTags(): ArrayCollection
    {
        return $this->tags;
    }

    /**
     * @param ArrayCollection $tags
     */
    public function setTags(ArrayCollection $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * @return ArrayCollection
     */
    public function getExtractedResults(): ArrayCollection
    {
        return $this->extracted_results;
    }

    /**
     * @param ArrayCollection $extracted_results
     */
    public function setExtractedResults(ArrayCollection $extracted_results): void
    {
        $this->extracted_results = $extracted_results;
    }

    /**
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * @param string|null $status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }


}
